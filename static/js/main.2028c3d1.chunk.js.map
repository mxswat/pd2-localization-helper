{"version":3,"sources":["BBCodeEmulator.js","items.default.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["bbcodeParser","me","this","token_match","tokens","bbcode_matches","html_tpls","html_matches","bbcode_tpls","_getRegEx","str","matches","match","nrmatches","length","i","replacement","RegExp","preg_quote","token","replace","substr","indexOf","_getTpls","positions","next_position","position","delimiter","addBBCode","bbcode_match","bbcode_tpl","push","bbcodeToHtml","nrbbcmatches","htmlToBBCode","nrhtmlmatches","DEFAULT","Editor","textKey","text","onUpdated","onDeleted","useState","itemKey","setItemKey","textValue","setTextValue","rendered","setRendered","taRows","setTaRows","emptyError","txt","content","pointing","useEffect","bb","split","Container","Form","className","Group","widths","Input","label","type","defaultValue","onBlur","e","newKey","target","value","error","Button","color","onClick","TextArea","rows","onChange","incomingValue","setTextValueAndPrint","Field","dangerouslySetInnerHTML","__html","Divider","App","localizationItems","setLocalizationItems","uploadRef","React","createRef","onReaderLoad","event","console","log","result","parsed","JSON","parse","toObject","Object","keys","reduce","acc","key","alert","current","click","objects","item","dataStr","encodeURIComponent","stringify","dlAnchorElem","document","createElement","setAttribute","body","appendChild","setTimeout","removeChild","downloadJSON","_items","blank","Date","getMilliseconds","addNewKeyVar","ref","hidden","reader","FileReader","onload","files","readAsText","id","map","payload","idx","updateItem","splice","deleteLocItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2028c3d1.chunk.js","sourcesContent":["/* eslint-disable no-useless-escape */\r\n// JS function to convert BBCode and HTML code - http;//coursesweb.net/javascript/\r\nvar BBCodeHTML = function () {\r\n    var me = this;            // stores the object instance\r\n    var token_match = /{[A-Z_]+[0-9]*}/ig;\r\n\r\n    // regular expressions for the different bbcode tokens\r\n    var tokens = {\r\n        'URL': '((?:(?:[a-z][a-z\\\\d+\\\\-.]*:\\\\/{2}(?:(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@|]+|%[\\\\dA-F]{2})+|[0-9.]+|\\\\[[a-z0-9.]+:[a-z0-9.]+:[a-z0-9.:]+\\\\])(?::\\\\d*)?(?:\\\\/(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@|]+|%[\\\\dA-F]{2})*)*(?:\\\\?(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@\\\\/?|]+|%[\\\\dA-F]{2})*)?(?:#(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@\\\\/?|]+|%[\\\\dA-F]{2})*)?)|(?:www\\\\.(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@|]+|%[\\\\dA-F]{2})+(?::\\\\d*)?(?:\\\\/(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@|]+|%[\\\\dA-F]{2})*)*(?:\\\\?(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@\\\\/?|]+|%[\\\\dA-F]{2})*)?(?:#(?:[a-z0-9\\\\-._~\\\\!$&\\'*+,;=:@\\\\/?|]+|%[\\\\dA-F]{2})*)?)))',\r\n        'LINK': '([a-z0-9\\-\\./]+[^\"\\' ]*)',\r\n        'EMAIL': '((?:[\\\\w\\!\\#$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]+\\.)*(?:[\\\\w\\!\\#$\\%\\'\\*\\+\\-\\/\\=\\?\\^\\`{\\|\\}\\~]|&)+@(?:(?:(?:(?:(?:[a-z0-9]{1}[a-z0-9\\-]{0,62}[a-z0-9]{1})|[a-z])\\.)+[a-z]{2,6})|(?:\\\\d{1,3}\\.){3}\\\\d{1,3}(?:\\:\\\\d{1,5})?))',\r\n        'TEXT': '(.*?)',\r\n        'SIMPLETEXT': '([a-zA-Z0-9-+.,_ ]+)',\r\n        'INTTEXT': '([a-zA-Z0-9-+,_. ]+)',\r\n        'IDENTIFIER': '([a-zA-Z0-9-_]+)',\r\n        'COLOR': '([a-z]+|#[0-9abcdef]+)',\r\n        'NUMBER': '([0-9]+)'\r\n    };\r\n\r\n    var bbcode_matches = [];        // matches for bbcode to html\r\n\r\n    var html_tpls = [];             // html templates for html to bbcode\r\n\r\n    var html_matches = [];          // matches for html to bbcode\r\n\r\n    var bbcode_tpls = [];           // bbcode templates for bbcode to html\r\n\r\n    /**\r\n     * Turns a bbcode into a regular rexpression by changing the tokens into\r\n     * their regex form\r\n     */\r\n    var _getRegEx = function (str) {\r\n        var matches = str.match(token_match);\r\n        var nrmatches = matches.length;\r\n        var i = 0;\r\n        var replacement = '';\r\n\r\n        if (nrmatches <= 0) {\r\n            return new RegExp(preg_quote(str), 'g');        // no tokens so return the escaped string\r\n        }\r\n\r\n        for (; i < nrmatches; i += 1) {\r\n            // Remove {, } and numbers from the token so it can match the\r\n            // keys in tokens\r\n            var token = matches[i].replace(/[{}0-9]/g, '');\r\n\r\n            if (tokens[token]) {\r\n                // Escape everything before the token\r\n                replacement += preg_quote(str.substr(0, str.indexOf(matches[i]))) + tokens[token];\r\n\r\n                // Remove everything before the end of the token so it can be used\r\n                // with the next token. Doing this so that parts can be escaped\r\n                str = str.substr(str.indexOf(matches[i]) + matches[i].length);\r\n            }\r\n        }\r\n\r\n        replacement += preg_quote(str);      // add whatever is left to the string\r\n\r\n        return new RegExp(replacement, 'gi');\r\n    };\r\n\r\n    /**\r\n     * Turns a bbcode template into the replacement form used in regular expressions\r\n     * by turning the tokens in $1, $2, etc.\r\n     */\r\n    var _getTpls = function (str) {\r\n        var matches = str.match(token_match);\r\n        var nrmatches = matches.length;\r\n        var i = 0;\r\n        var replacement = '';\r\n        var positions = {};\r\n        var next_position = 0;\r\n\r\n        if (nrmatches <= 0) {\r\n            return str;       // no tokens so return the string\r\n        }\r\n\r\n        for (; i < nrmatches; i += 1) {\r\n            // Remove {, } and numbers from the token so it can match the\r\n            // keys in tokens\r\n            var token = matches[i].replace(/[{}0-9]/g, '');\r\n            var position;\r\n\r\n            // figure out what $# to use ($1, $2)\r\n            if (positions[matches[i]]) {\r\n                position = positions[matches[i]];         // if the token already has a position then use that\r\n            } else {\r\n                // token doesn't have a position so increment the next position\r\n                // and record this token's position\r\n                next_position += 1;\r\n                position = next_position;\r\n                positions[matches[i]] = position;\r\n            }\r\n\r\n            if (tokens[token]) {\r\n                replacement += str.substr(0, str.indexOf(matches[i])) + '$' + position;\r\n                str = str.substr(str.indexOf(matches[i]) + matches[i].length);\r\n            }\r\n        }\r\n\r\n        replacement += str;\r\n\r\n        return replacement;\r\n    };\r\n\r\n    /**\r\n     * Adds a bbcode to the list\r\n     */\r\n    me.addBBCode = function (bbcode_match, bbcode_tpl) {\r\n        // add the regular expressions and templates for bbcode to html\r\n        bbcode_matches.push(_getRegEx(bbcode_match));\r\n        html_tpls.push(_getTpls(bbcode_tpl));\r\n\r\n        // add the regular expressions and templates for html to bbcode\r\n        html_matches.push(_getRegEx(bbcode_tpl));\r\n        bbcode_tpls.push(_getTpls(bbcode_match));\r\n    };\r\n\r\n    /**\r\n     * Turns all of the added bbcodes into html\r\n     */\r\n    me.bbcodeToHtml = function (str) {\r\n        var nrbbcmatches = bbcode_matches.length;\r\n        var i = 0;\r\n\r\n        for (; i < nrbbcmatches; i += 1) {\r\n            str = str.replace(bbcode_matches[i], html_tpls[i]);\r\n        }\r\n\r\n        return str;\r\n    };\r\n\r\n    /**\r\n     * Turns html into bbcode\r\n     */\r\n    me.htmlToBBCode = function (str) {\r\n        var nrhtmlmatches = html_matches.length;\r\n        var i = 0;\r\n\r\n        for (; i < nrhtmlmatches; i += 1) {\r\n            str = str.replace(html_matches[i], bbcode_tpls[i]);\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    /**\r\n     * Quote regular expression characters plus an optional character\r\n     * taken from phpjs.org\r\n     */\r\n    function preg_quote(str, delimiter) {\r\n        return (str + '').replace(new RegExp('[.\\\\\\\\+*?\\\\[\\\\^\\\\]$(){}=!<>|:\\\\' + (delimiter || '') + '-]', 'g'), '\\\\$&');\r\n    }\r\n\r\n    // adds BBCodes and their HTML\r\n    me.addBBCode('##{TEXT}##', '<span class=\"pd2-blue\">{TEXT}</span>');\r\n};\r\nvar bbcodeParser = new BBCodeHTML();       // creates object instance of BBCodeHTML()\r\nexport default bbcodeParser;","export const DEFAULT = [\r\n    [\"locale_key_one\", \"Localized Text here\"],\r\n    [\"locale_key_two\", \"Localized Text here\"],\r\n    [\"locale_key_three\", \"Localized Text here\"],\r\n    [\"locale_key_four\", \"Localized Text here\"],\r\n]\r\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport bbcodeParser from \"./BBCodeEmulator\";\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { Divider, Container } from 'semantic-ui-react'\r\nimport { DEFAULT } from \"./items.default\";\r\nfunction App() {\r\n  const [localizationItems, setLocalizationItems] = useState(DEFAULT);\r\n\r\n  const uploadRef = React.createRef()\r\n  function readJSON(e) {\r\n    var reader = new FileReader();\r\n    reader.onload = onReaderLoad;\r\n    if (e.target.files[0]) {\r\n      reader.readAsText(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  function onReaderLoad(event) {\r\n    console.log(event.target.result);\r\n    try {\r\n      var parsed = JSON.parse(event.target.result);\r\n      const toObject = Object.keys(parsed).reduce((acc, key) => { \r\n        acc.push([key, parsed[key]])\r\n        return acc\r\n      }, [])\r\n      setLocalizationItems(toObject)\r\n    } catch (error) {\r\n      alert(\"Hey, this file is not a valid localization file (a JSON file)\")\r\n    }\r\n  }\r\n\r\n  function addNewKeyVar() {\r\n    const _items = [...localizationItems]\r\n    const blank = [`Random_string_${new Date().getMilliseconds()}`, \"\"]\r\n    _items.push(blank)\r\n    setLocalizationItems(_items)\r\n  }\r\n\r\n  function deleteLocItem(idx) {\r\n    const _items = [...localizationItems]\r\n    _items.splice(idx, 1)\r\n    setLocalizationItems(_items)\r\n  }\r\n\r\n  function updateItem(payload, idx) {\r\n    const _items = [...localizationItems]\r\n    if (payload.textKey ?? false) {\r\n      _items[idx] = [payload.textKey, _items[idx][1]]\r\n    } else if (payload.text ?? false) {\r\n      _items[idx] = [_items[idx][0], payload.text]\r\n    }\r\n    setLocalizationItems(_items)\r\n  }\r\n\r\n  function downloadJSON() {\r\n    const objects = localizationItems.reduce((acc, item) => {\r\n      acc[item[0]] = item[1]\r\n      return acc\r\n    }, {})\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(objects, null, 2));\r\n    var dlAnchorElem = document.createElement('a');\r\n    dlAnchorElem.setAttribute(\"href\", dataStr);\r\n    dlAnchorElem.setAttribute(\"download\", \"locale.json\");\r\n    document.body.appendChild(dlAnchorElem); // Please firefox don't break, thanks\r\n    dlAnchorElem.click();\r\n    setTimeout(() => {\r\n      document.body.removeChild(dlAnchorElem)\r\n    }, 10);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <Container>\r\n          <div className=\"toolbar\">\r\n            <Button>New Project</Button>\r\n            <Button onClick={() => uploadRef.current?.click()}>Load from file</Button>\r\n            <Button onClick={() => downloadJSON()}>Save to file</Button>\r\n            <div className=\"spacer\"></div>\r\n            <Button onClick={() => addNewKeyVar()}>Add new Line</Button>\r\n            <input ref={uploadRef} hidden label=\"Load file\" onChange={readJSON} id=\"file\" type=\"file\" />\r\n          </div>\r\n        </Container>\r\n      </header>\r\n\r\n      <div className=\"lists\">\r\n        {localizationItems.map((item, i) => (\r\n          <Editor key={i + item[0]} textKey={item[0]} text={item[1]} onUpdated={e => updateItem(e, i)} onDeleted={() => deleteLocItem(i)}></Editor>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Editor({ textKey, text, onUpdated, onDeleted }) {\r\n  const [itemKey, setItemKey] = useState(\"\");\r\n  const [textValue, setTextValue] = useState(\"\");\r\n  const [rendered, setRendered] = useState(\"\");\r\n  const [taRows, setTaRows] = useState(5);\r\n\r\n  const emptyError = (txt) => {\r\n    return {\r\n      content: txt || 'Hey, this is empty',\r\n      pointing: 'below',\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (textKey && !rendered) {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      text = text || \"\"\r\n      setItemKey(textKey)\r\n      setTextValue(text)\r\n      const bb = bbcodeParser.bbcodeToHtml(text)\r\n      setRendered(bb)\r\n      setTaRows(text.split(/\\r\\n|\\r|\\n/).length)\r\n    }\r\n  }, [textKey, text, rendered])\r\n\r\n  function setKeyAndUpdate(newKey) {\r\n    setItemKey(newKey)\r\n    if (!newKey) return\r\n    onUpdated({\r\n      textKey: newKey,\r\n    })\r\n  }\r\n\r\n  function setTextValueAndPrint(incomingValue) {\r\n    setTextValue(incomingValue)\r\n    const bb = bbcodeParser.bbcodeToHtml(incomingValue)\r\n    setRendered(bb)\r\n    setTaRows(incomingValue.split(/\\r\\n|\\r|\\n/).length)\r\n    onUpdated({\r\n      text: incomingValue\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form className=\"editor\">\r\n        <Form.Group widths='equal'>\r\n          <Form.Input\r\n            label='Localization Key'\r\n            type='text'\r\n            defaultValue={itemKey}\r\n            onBlur={e => setKeyAndUpdate(e.target.value)}\r\n            error={!itemKey ? emptyError(\"This field must have a value! If you want to remove it, click on the delete button\") : false} />\r\n          <Button className=\"delete-btt\" color='red' onClick={() => onDeleted(itemKey)}>Remove</Button>\r\n        </Form.Group>\r\n        <Form.TextArea\r\n          className=\"no-resize\"\r\n          rows={taRows}\r\n          label={`Localized text`}\r\n          defaultValue={textValue}\r\n          onChange={e => setTextValueAndPrint(e.target.value)}\r\n          error={!textValue ? emptyError() : false} />\r\n        <Form.Field>\r\n          <label>Result</label>\r\n          <div className=\"result\" dangerouslySetInnerHTML={{ __html: rendered }}></div>\r\n        </Form.Field>\r\n        <Divider />\r\n      </Form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}